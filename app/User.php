<?php

namespace App;

use Illuminate\Notifications\Notifiable;
use Illuminate\Foundation\Auth\User as Authenticatable;

class User extends Authenticatable
{
    use Notifiable;

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'name', 'email', 'password', 'role_id', 'is_active', 'photo_id',
    ];

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [
        'password', 'remember_token',
    ];
    // Checking user is admin or not
    public function isAdmin(){
        if($this->role->name == "administrator" && $this->is_active == 1){
            return true;
        }else{
            return false;
        }
    }

    public function photos(){
        return $this->morphMany('App\Photo', 'photoable');
    }
    public function role(){
        return $this->belongsTo('App\Role');
    }
    public function photo(){
        return $this->belongsTo('App\Photo');
    }
    public function posts(){
        return $this->hasMany('App\Post');
    }
    public function getGravatarAttribute(){

        $hash = md5(strtolower(trim($this->attributes['email'])));
// Craft a potential url and test its headers

        $uri = 'http://www.gravatar.com/avatar/' . $hash . '?d=404';
        $headers = @get_headers($uri);
        if (!preg_match("|200|", $headers[0])) {
            return $this->photos()->first()->path;
        } else {
            return "http://www.gravatar.com/avatar/$hash";
        }



    }


    public function delete()
    {
        foreach ($this->posts as $post){
            $post->delete();
        }


        return parent::delete(); // TODO: Change the autogenerated stub
    }
}
